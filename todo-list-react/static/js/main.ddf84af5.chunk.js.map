{"version":3,"sources":["components/CommonComponents/Button/Button.js","components/CommonComponents/Input/Input.js","components/AddForm/AddForm.js","components/Item/Item.js","components/ItemIndex/ItemIndex.js","ToDoList.js","index.js"],"names":["Button","props","onClick","action","buttonText","Input","useState","defaultValue","value","setValue","sendData","inputRef","useRef","useEffect","current","focus","type","onChange","event","target","onKeyPress","key","onKeyDown","cancelAction","ref","AddForm","addItem","parentKey","Item","isEdited","setEdited","addingNow","setAdding","toggleEditing","toggleAdding","item","editItem","data","name","className","isDone","toggleDone","removeItem","subItems","length","reduce","acc","map","ItemIndex","items","ToDoList","setItems","getParent","arr","keys","keyIndex","currentKey","index","findIndex","toggleWithChildren","updateParents","shift","parent","currentItem","setAndSaveItems","newItems","localStorage","setItem","JSON","stringify","parse","push","uuidv4","getItem","splice","doneItem","newItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ddf84af5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Button = (props) => {\r\n  \r\n  const handleClick = () => {\r\n    props.action()\r\n  }\r\n\r\n  return (\r\n    <button onClick={handleClick}>\r\n      {props.buttonText}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;","import React, {useEffect, useRef, useState} from \"react\";\r\n\r\nimport Button from \"../Button/Button\";\r\n\r\nconst Input = (props) => {\r\n\r\n  const [value, setValue] = useState(props.defaultValue)\r\n\r\n  const inputHandler = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const keyPressHandler = (event) => {\r\n    if (value !== \"\"){\r\n      if (event.key === \"Enter\") {\r\n        sendData(value);\r\n      }\r\n    }\r\n  }\r\n\r\n  const keyDownHandler = (event) => {\r\n    if (event.key === \"Escape\") {\r\n      props.cancelAction();\r\n    }\r\n  }\r\n\r\n  const buttonHandler = (event) => {\r\n    if (value !== \"\"){\r\n      sendData(value)\r\n    }\r\n  }\r\n\r\n  const sendData = (value) => {\r\n    props.action(value);\r\n    setValue(\"\");\r\n  }\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => inputRef.current.focus(), [])\r\n\r\n  return (\r\n    <>\r\n      <input \r\n        type=\"text\" \r\n        value={value} \r\n        onChange={inputHandler} \r\n        onKeyPress={keyPressHandler} \r\n        onKeyDown = {keyDownHandler}\r\n        ref = {inputRef}\r\n      />\r\n      <Button action={buttonHandler} buttonText={props.buttonText}/>\r\n    </>\r\n  );\r\n} \r\n\r\nexport default Input;","import React from \"react\";\r\nimport Input from \"../CommonComponents/Input/Input\";\r\n\r\nconst AddForm = (props) => {\r\n  return (\r\n    <div>\r\n      <Input \r\n        action = {(value) => props.addItem(value, props.parentKey)} \r\n        cancelAction = {props.cancelAction} \r\n        buttonText={\"+\"} \r\n        defaultValue={\"\"}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddForm;","import React, { useState } from \"react\";\r\nimport Input from \"../CommonComponents/Input/Input\";\r\n\r\nimport Button from \"../CommonComponents/Button/Button\";\r\nimport AddForm from \"../AddForm/AddForm\";\r\nimport \"./Item.css\";\r\n\r\nconst Item = (props) => {\r\n\r\n  const clickHandler = (event) => {\r\n    props.toggleDone(\r\n      props.data.key, \r\n      props.parentKey, \r\n    );\r\n  }\r\n\r\n  const editHandler = (value) => {\r\n    props.editItem(\r\n      props.data.key, \r\n      props.parentKey, \r\n      (item => {\r\n        item.name = value; \r\n        return item;\r\n      })(props.data)\r\n    );\r\n    toggleEditing();\r\n  }\r\n\r\n  const [isEdited, setEdited] = useState(false);\r\n\r\n  const [addingNow, setAdding] = useState(false);\r\n\r\n  const toggleEditing = () => {\r\n    setEdited(!isEdited);\r\n  }\r\n\r\n  const toggleAdding = () => {\r\n    setAdding(!addingNow);\r\n    setEdited(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        { !isEdited ?\r\n          <div className={props.data.isDone ? \"done\" : \"\"} onClick = {clickHandler}>\r\n            {props.data.name}\r\n          </div> :\r\n          <Input action={editHandler} \r\n            buttonText={\"Ok\"} \r\n            defaultValue={props.data.name} \r\n            cancelAction = {toggleEditing}\r\n          />\r\n        }\r\n        { !addingNow &&\r\n          <Button\r\n            action = {toggleEditing}\r\n            buttonText = {!isEdited ? \"Edit\" : \"Cancel\"}\r\n          />\r\n        }\r\n        { !(isEdited || addingNow) &&\r\n          <Button \r\n            action = {() => props.removeItem(props.data.key, props.parentKey)}\r\n            buttonText = \"Delete\"\r\n          />\r\n        }\r\n        { (isEdited || addingNow) && \r\n          <Button\r\n            action = {toggleAdding}\r\n            buttonText = {!addingNow ? \"Add\" : \"Cancel\"}\r\n          />\r\n        }\r\n        { addingNow &&\r\n          <AddForm\r\n            addItem = {props.addItem}\r\n            parentKey = {[props.data.key, ...props.parentKey]}\r\n            cancelAction = {toggleAdding}\r\n          />\r\n        }\r\n        { props.data.subItems && props.data.subItems.length > 0 &&\r\n          <>\r\n            {props.data.subItems.reduce((acc, item) => item.isDone ? ++acc : acc, 0)}/{props.data.subItems.length}\r\n          </>\r\n        }\r\n      </div>\r\n      { props.data.subItems && \r\n        <ul>\r\n          {props.data.subItems.map( item => \r\n            <li key = {item.key}>\r\n              <Item data={item}\r\n                removeItem = {props.removeItem}\r\n                toggleDone = {props.toggleDone}\r\n                editItem = {props.editItem}\r\n                addItem = {props.addItem}\r\n                parentKey = {[props.data.key, ...props.parentKey]}\r\n              />\r\n            </li>\r\n          )}\r\n        </ul>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Item;","import React from \"react\";\r\n\r\nimport Item from \"../Item/Item\";\r\n\r\nconst ItemIndex = (props) => {\r\n  return (\r\n    <ul>\r\n      { props.items.map( item => \r\n          <li key = {item.key}>\r\n            <Item data={item}\r\n              removeItem = {props.removeItem}\r\n              toggleDone = {props.toggleDone}\r\n              editItem = {props.editItem}\r\n              addItem = {props.addItem}\r\n              parentKey = {[]}\r\n            />\r\n          </li>\r\n        )\r\n      }\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ItemIndex;","import React, { useEffect, useState } from \"react\";\r\n\r\nimport ItemIndex from \"./components/ItemIndex/ItemIndex\";\r\nimport AddForm from \"./components/AddForm/AddForm\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport \"./ToDoList.css\"\r\n\r\nconst ToDoList = (props) => {\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  const getParent = (arr, keys, keyIndex = keys.length-1) => {\r\n    if (keyIndex === -1){\r\n      return arr;\r\n    } else {\r\n      let currentKey = keys[keyIndex];\r\n      let index = arr.findIndex((item) => item.key === currentKey);\r\n      if (!arr[index].subItems) arr[index].subItems = [];\r\n      return getParent(arr[index].subItems, keys, --keyIndex)\r\n    }\r\n  }\r\n\r\n  const toggleWithChildren = (item, isDone) => {\r\n    item.isDone = isDone;\r\n    if (item.subItems) {\r\n      for (let subItem of item.subItems){\r\n        toggleWithChildren(subItem, isDone);\r\n      }\r\n    }\r\n  }\r\n\r\n  const updateParents = (items, keys) => {\r\n    if (keys.length > 0){\r\n      let currentKey = keys.shift();\r\n      let parent = getParent(items, keys);\r\n      let currentItem = parent[parent.findIndex((item) => item.key === currentKey)];\r\n      if (\r\n        currentItem.subItems.reduce((acc, item) => item.isDone ? acc : false, true) === \r\n        !currentItem.isDone\r\n      ) {\r\n        currentItem.isDone = !currentItem.isDone;\r\n        updateParents(items, keys);\r\n      }\r\n    }\r\n  }\r\n\r\n  const setAndSaveItems = (newItems) => {\r\n    localStorage.setItem(\"items\", JSON.stringify(newItems));\r\n    setItems(newItems);\r\n  }\r\n\r\n  const toggleDone = (key, parentKey) => {\r\n    let newItems = JSON.parse(JSON.stringify(items));\r\n    let parent = getParent(newItems, parentKey);\r\n    let doneItem = parent[parent.findIndex((item) => item.key === key)];\r\n    toggleWithChildren(doneItem, !doneItem.isDone);\r\n    updateParents(newItems, parentKey);\r\n    setAndSaveItems (newItems);\r\n  }\r\n\r\n  const addItem = (name, parentKey) => {\r\n    let newItems = JSON.parse(JSON.stringify(items));\r\n    let parent = getParent(newItems, parentKey);\r\n    parent.push(\r\n      {\r\n        name:name, \r\n        key:uuidv4(),\r\n        isDone:false,\r\n      }\r\n    );\r\n    updateParents(newItems, parentKey);\r\n    setAndSaveItems(newItems);\r\n  }\r\n\r\n  const removeItem = (key, parentKey) => {\r\n    let newItems = JSON.parse(JSON.stringify(items));\r\n    let parent = getParent(newItems, parentKey);\r\n    parent.splice(parent.findIndex((item) => item.key === key),1);\r\n    updateParents(newItems, parentKey);\r\n    setAndSaveItems(newItems);\r\n  }\r\n\r\n  const editItem = (key, parentKey, newItem) => {\r\n    let newItems = JSON.parse(JSON.stringify(items));\r\n    let parent = getParent(newItems, parentKey); \r\n    parent[parent.findIndex((item) => item.key === key)] = newItem;\r\n    setAndSaveItems(newItems);\r\n  }\r\n\r\n  useEffect(() => setItems(JSON.parse(localStorage.getItem(\"items\")) || []), []); \r\n\r\n  return (\r\n    <div className = \"ToDoList\">\r\n      <AddForm\r\n        addItem = {addItem}\r\n        parentKey = {[]}\r\n        cancelAction={() => void 0}\r\n      />\r\n      <ItemIndex \r\n        items = {items}\r\n        removeItem = {removeItem}\r\n        toggleDone = {toggleDone}\r\n        editItem = {editItem}\r\n        addItem = {addItem}\r\n      />\r\n    </div>  \r\n  );\r\n}\r\n\r\nexport default ToDoList;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport ToDoList from \"./ToDoList\";\r\n\r\nReactDOM.render(\r\n  <ToDoList />,  document.getElementById('root')\r\n);"],"sourceRoot":""}