{"version":3,"sources":["components/CommonComponents/Button/Button.js","components/CommonComponents/Input/Input.js","components/AddForm/AddForm.js","components/Item/Item.js","components/ItemIndex/ItemIndex.js","ToDoList.js","index.js"],"names":["Button","props","IconButton","onClick","action","buttonText","Add","Delete","Edit","Cancel","Input","useState","defaultValue","value","setValue","sendData","TextField","label","variant","onChange","event","target","onKeyPress","key","onKeyDown","cancelAction","size","hiddenLabel","autoFocus","AddForm","addItem","parentKey","Item","isEdited","setEdited","addingNow","setAdding","toggleEditing","toggleAdding","Container","sx","closest","toggleDone","data","Grid","container","direction","justifyContent","alignItems","xs","item","editItem","name","className","isDone","Box","columnSpacing","subItems","length","reduce","acc","removeItem","map","ItemIndex","items","ToDoList","setItems","getParent","arr","keys","keyIndex","currentKey","index","findIndex","toggleWithChildren","updateParents","shift","parent","currentItem","setAndSaveItems","newItems","localStorage","setItem","JSON","stringify","parse","push","uuid","useEffect","getItem","splice","doneItem","newItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a78211a2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { IconButton } from \"@mui/material\"\r\nimport { Add, Delete, Edit, Cancel} from '@mui/icons-material';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n\r\nconst Button = (props) => {\r\n  \r\n  const handleClick = () => {\r\n    props.action()\r\n  }\r\n\r\n  return (\r\n    <IconButton onClick={handleClick} >\r\n      { \r\n        props.buttonText === \"+\" ? <Add/> : \r\n        props.buttonText === \"Delete\" ? <Delete/> :\r\n        props.buttonText === \"Edit\" ? <Edit/> :\r\n        props.buttonText === \"Ok\" ? <CheckIcon/> :\r\n        props.buttonText === \"Cancel\" ? <Cancel/> :\r\n        props.buttonText\r\n      }\r\n    </IconButton>\r\n  );\r\n}\r\n\r\nexport default Button;","import React, {/*useEffect, useRef,*/ useState} from \"react\";\r\n\r\nimport Button from \"../Button/Button\";\r\n\r\nimport { TextField } from \"@mui/material\";\r\n\r\nconst Input = (props) => {\r\n\r\n  const [value, setValue] = useState(props.defaultValue)\r\n\r\n  const inputHandler = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const keyPressHandler = (event) => {\r\n    if (value !== \"\"){\r\n      if (event.key === \"Enter\") {\r\n        sendData(value);\r\n      }\r\n    }\r\n  }\r\n\r\n  const keyDownHandler = (event) => {\r\n    if (event.key === \"Escape\") {\r\n      props.cancelAction();\r\n    }\r\n  }\r\n\r\n  const buttonHandler = (event) => {\r\n    if (value !== \"\"){\r\n      sendData(value)\r\n    }\r\n  }\r\n\r\n  const sendData = (value) => {\r\n    props.action(value);\r\n    setValue(\"\");\r\n  }\r\n\r\n  //const inputRef = useRef(null);\r\n\r\n  //useEffect(() => inputRef.current.focus(), [])\r\n\r\n  return (\r\n    <>\r\n      <TextField \r\n        label={props.defaultValue}\r\n        variant=\"outlined\" \r\n        //ref = {inputRef}\r\n        value={value} \r\n        onChange={inputHandler} \r\n        onKeyPress={keyPressHandler} \r\n        onKeyDown = {keyDownHandler}\r\n        size=\"small\"\r\n        hiddenLabel\r\n        autoFocus \r\n      />\r\n      <Button action={buttonHandler} buttonText={props.buttonText}/>\r\n    </>\r\n  );\r\n} \r\n\r\nexport default Input;","import { Box } from \"@mui/system\";\r\nimport React from \"react\";\r\nimport Input from \"../CommonComponents/Input/Input\";\r\n\r\nconst AddForm = (props) => {\r\n  return (\r\n    <Box>\r\n      <Input \r\n        action = {(value) => props.addItem(value, props.parentKey)} \r\n        cancelAction = {props.cancelAction} \r\n        buttonText={\"+\"} \r\n        defaultValue={\"\"}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default AddForm;","import React, { useState } from \"react\";\r\nimport Input from \"../CommonComponents/Input/Input\";\r\n\r\nimport { Grid, Container, Box } from \"@mui/material\";\r\n\r\nimport Button from \"../CommonComponents/Button/Button\";\r\nimport AddForm from \"../AddForm/AddForm\";\r\nimport \"./Item.css\";\r\n\r\nconst Item = (props) => {\r\n\r\n  const clickHandler = (event) => {\r\n    if (!event.target.closest('.MuiButtonBase-root') && !event.target.closest('.MuiTextField-root')){\r\n      props.toggleDone(\r\n        props.data.key, \r\n        props.parentKey, \r\n      );\r\n    }\r\n  }\r\n\r\n  const editHandler = (value) => {\r\n    props.editItem(\r\n      props.data.key, \r\n      props.parentKey, \r\n      (item => {\r\n        item.name = value; \r\n        return item;\r\n      })(props.data)\r\n    );\r\n    toggleEditing();\r\n  }\r\n\r\n  const [isEdited, setEdited] = useState(false);\r\n\r\n  const [addingNow, setAdding] = useState(false);\r\n\r\n  const toggleEditing = () => {\r\n    setEdited(!isEdited);\r\n  }\r\n\r\n  const toggleAdding = () => {\r\n    setAdding(!addingNow);\r\n    setEdited(false);\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      <Container \r\n        sx={{\r\n          \"borderRadius\": \"5px\",\r\n          \"backgroundColor\": \"#B2E7E8\",\r\n          \"boxShadow\": \"0 0 15px 7px rgba(0, 0, 0, 0.247)\",\r\n          \"padding\": \"5px\",\r\n          \"margin\": \"10px\",\r\n          \"marginLeft\": \"0px\",\r\n          \"userSelect\": \"none\"\r\n        }}\r\n        onClick = {clickHandler}\r\n      >\r\n        <Grid\r\n          sx={{\r\n            \"alignItems\": \"center\"\r\n          }}\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Grid xs = {10} item>\r\n            { !isEdited ?\r\n                <div className={props.data.isDone ? \" done\" : \"\"}>\r\n                  <Box sx={{\r\n                    \"font\": '1.2em \"Arial\", serif'\r\n                  }}>\r\n                    {props.data.name}\r\n                  </Box>\r\n                </div> :\r\n                <Input action={editHandler} \r\n                  buttonText={\"Ok\"} \r\n                  defaultValue={props.data.name} \r\n                  cancelAction = {toggleEditing}\r\n                />\r\n            }\r\n          </Grid>\r\n          <Grid \r\n            container \r\n            item \r\n            xs \r\n            columnSpacing={1} \r\n            sx={{\r\n              \"alignItems\": \"center\"\r\n            }}\r\n          >\r\n            <Grid item xs=\"6\">\r\n              { props.data.subItems && props.data.subItems.length > 0 &&\r\n                <Box sx={{\r\n                  \"border\":\"4px #8FB9AA solid \",\r\n                  \"border-radius\":\"25%\",\r\n                  \"padding\": \"5px\",\r\n                  \"width\": \"auto\",\r\n                  \"textAlign\": \"center\",\r\n                  \"font\": '1.2em \"Arial\", serif'\r\n                }}>\r\n                  <>\r\n                    {props.data.subItems.reduce((acc, item) => item.isDone ? ++acc : acc, 0)}/{props.data.subItems.length}\r\n                  </>\r\n                </Box>\r\n              }\r\n            </Grid>\r\n            { !addingNow &&\r\n              <Grid item xs=\"3\">\r\n                <Button\r\n                  action = {toggleEditing}\r\n                  buttonText = {!isEdited ? \"Edit\" : \"Cancel\"}\r\n                />\r\n              </Grid>\r\n            }\r\n            { !(isEdited || addingNow) &&\r\n              <Grid item xs=\"3\">\r\n                <Button \r\n                  action = {() => props.removeItem(props.data.key, props.parentKey)}\r\n                  buttonText = \"Delete\"\r\n                />\r\n              </Grid>\r\n            }\r\n            { (isEdited || addingNow) && \r\n              <Grid item xs=\"3\">\r\n                <Button\r\n                  action = {toggleAdding}\r\n                  buttonText = {!addingNow ? \"+\" : \"Cancel\"}\r\n                />\r\n              </Grid>\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      { ((props.data.subItems && props.data.subItems.length !== 0) || addingNow) && \r\n        <ul>\r\n          { addingNow && \r\n            <li key = {\"add\"} sx={{\"flexFlow\": \"column wrap\", \"alignItems\": \"stretch\" }}>\r\n              { addingNow &&\r\n                <Box sx={{\r\n                  \"borderRadius\": \"5px\",\r\n                  \"backgroundColor\": \"#B2E7E8\",\r\n                  \"boxShadow\": \"0 0 15px 7px rgba(0, 0, 0, 0.247)\",\r\n                  \"padding\": \"5px\",\r\n                  \"margin\": \"10px\",\r\n                  \"marginLeft\": \"0px\",\r\n                  \"userSelect\": \"none\"\r\n                }}>\r\n                  <AddForm\r\n                    addItem = {props.addItem}\r\n                    parentKey = {[props.data.key, ...props.parentKey]}\r\n                    cancelAction = {toggleAdding}\r\n                  />\r\n                </Box>\r\n              }\r\n            </li>\r\n          }\r\n          { props.data.subItems &&\r\n              props.data.subItems.map( item => \r\n                <Item \r\n                  key = {item.key}\r\n                  data={item}\r\n                  removeItem = {props.removeItem}\r\n                  toggleDone = {props.toggleDone}\r\n                  editItem = {props.editItem}\r\n                  addItem = {props.addItem}\r\n                  parentKey = {[props.data.key, ...props.parentKey]}\r\n                />\r\n              )\r\n          }\r\n        </ul>\r\n      }\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Item;","import React from \"react\";\r\n\r\nimport Item from \"../Item/Item\";\r\nimport \"./ItemIndex.css\";\r\n\r\nconst ItemIndex = (props) => {\r\n  return (\r\n    <>\r\n      { props.items.length !== 0 && \r\n        <ul className=\"firstList\">\r\n          { props.items.map( item => \r\n              <Item \r\n                data={item}\r\n                removeItem = {props.removeItem}\r\n                toggleDone = {props.toggleDone}\r\n                editItem = {props.editItem}\r\n                addItem = {props.addItem}\r\n                parentKey = {[]}\r\n                key={item.key}\r\n              />\r\n            )\r\n          }\r\n        </ul>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ItemIndex;","import React, { useEffect, useState } from \"react\";\r\n\r\nimport ItemIndex from \"./components/ItemIndex/ItemIndex\";\r\nimport AddForm from \"./components/AddForm/AddForm\";\r\nimport * as uuid from \"uuid\";\r\n\r\nimport \"./ToDoList.css\"\r\nimport { Box } from \"@mui/system\";\r\n\r\nconst ToDoList = (props) => {\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  const getParent = (arr, keys, keyIndex = keys.length-1) => {\r\n    if (keyIndex === -1){\r\n      return arr;\r\n    } else {\r\n      let currentKey = keys[keyIndex];\r\n      let index = arr.findIndex((item) => item.key === currentKey);\r\n      if (!arr[index].subItems) arr[index].subItems = [];\r\n      return getParent(arr[index].subItems, keys, --keyIndex)\r\n    }\r\n  }\r\n\r\n  const toggleWithChildren = (item, isDone) => {\r\n    item.isDone = isDone;\r\n    if (item.subItems) {\r\n      for (let subItem of item.subItems){\r\n        toggleWithChildren(subItem, isDone);\r\n      }\r\n    }\r\n  }\r\n\r\n  const updateParents = (items, keys) => {\r\n    if (keys.length > 0){\r\n      let currentKey = keys.shift();\r\n      let parent = getParent(items, keys);\r\n      let currentItem = parent[parent.findIndex((item) => item.key === currentKey)];\r\n      if (\r\n        currentItem.subItems.reduce((acc, item) => item.isDone ? acc : false, true) === \r\n        !currentItem.isDone\r\n      ) {\r\n        currentItem.isDone = !currentItem.isDone;\r\n        updateParents(items, keys);\r\n      }\r\n    }\r\n  }\r\n\r\n  const setAndSaveItems = (newItems) => {\r\n    localStorage.setItem(\"items\", JSON.stringify(newItems));\r\n    setItems(newItems);\r\n  }\r\n\r\n  const toggleDone = (key, parentKey) => {\r\n    let newItems = JSON.parse(JSON.stringify(items));\r\n    let parent = getParent(newItems, parentKey);\r\n    let doneItem = parent[parent.findIndex((item) => item.key === key)];\r\n    toggleWithChildren(doneItem, !doneItem.isDone);\r\n    updateParents(newItems, parentKey);\r\n    setAndSaveItems (newItems);\r\n  }\r\n\r\n  const addItem = (name, parentKey) => {\r\n    let newItems = JSON.parse(JSON.stringify(items));\r\n    let parent = getParent(newItems, parentKey);\r\n    parent.push(\r\n      {\r\n        name:name, \r\n        key:uuid.v4(),\r\n        isDone:false,\r\n      }\r\n    );\r\n    updateParents(newItems, parentKey);\r\n    setAndSaveItems(newItems);\r\n  }\r\n\r\n  const removeItem = (key, parentKey) => {\r\n    let newItems = JSON.parse(JSON.stringify(items));\r\n    let parent = getParent(newItems, parentKey);\r\n    parent.splice(parent.findIndex((item) => item.key === key),1);\r\n    updateParents(newItems, parentKey);\r\n    setAndSaveItems(newItems);\r\n  }\r\n\r\n  const editItem = (key, parentKey, newItem) => {\r\n    let newItems = JSON.parse(JSON.stringify(items));\r\n    let parent = getParent(newItems, parentKey); \r\n    parent[parent.findIndex((item) => item.key === key)] = newItem;\r\n    setAndSaveItems(newItems);\r\n  }\r\n\r\n  useEffect(() => setItems(JSON.parse(localStorage.getItem(\"items\")) || []), []); \r\n\r\n  return (\r\n    <Box \r\n      sx={{\r\n        \"padding\": \"20px\",\r\n        \"margin\": \"auto\",\r\n        \"marginTop\": \"100px\",\r\n        \"maxWidth\": \"800px\",\r\n        \"borderRadius\": \"5px\",\r\n        \"backgroundColor\": \"#304D63\",\r\n        \"boxShadow\": \"0 0 15px 7px rgba(0, 0, 0, 0.247)\",\r\n      }}\r\n    >\r\n      <AddForm\r\n        addItem = {addItem}\r\n        parentKey = {[]}\r\n        cancelAction={() => void 0}\r\n      />\r\n      <ItemIndex \r\n        items = {items}\r\n        removeItem = {removeItem}\r\n        toggleDone = {toggleDone}\r\n        editItem = {editItem}\r\n        addItem = {addItem}\r\n      />\r\n    </Box>  \r\n  );\r\n}\r\n\r\nexport default ToDoList;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport '@fontsource/roboto/300.css';\r\nimport '@fontsource/roboto/400.css';\r\nimport '@fontsource/roboto/500.css';\r\nimport '@fontsource/roboto/700.css';\r\n\r\nimport ToDoList from \"./ToDoList\";\r\n\r\nReactDOM.render(\r\n  <ToDoList />,  document.getElementById('root')\r\n);"],"sourceRoot":""}